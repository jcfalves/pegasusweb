/*
 * Auth Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Bayer.Pegasus.Entities.Auth
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class LoginViewModel :  IEquatable<LoginViewModel>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="LoginViewModel" /> class.
        /// </summary>
        /// <param name="NameUser">NameUser.</param>
        /// <param name="Email">Email.</param>
        /// <param name="SystemName">SystemName.</param>
        /// <param name="Cwid">Cwid.</param>
        /// <param name="DtLastLogin">DtLastLogin.</param>
        /// <param name="Roles">Roles.</param>
        public LoginViewModel(string NameUser = default(string), string Email = default(string), string SystemName = default(string), string Cwid = default(string), DateTime? DtLastLogin = default(DateTime?), List<Role> Roles = default(List<Role>))
        {
            this.NameUser = NameUser;
            this.Email = Email;
            this.SystemName = SystemName;
            this.Cwid = Cwid;
            this.DtLastLogin = DtLastLogin;
            this.Roles = Roles;
            
        }

        /// <summary>
        /// Gets or Sets NameUser
        /// </summary>
        [DataMember(Name="nameUser")]
        public string NameUser { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email")]
        public string Email { get; set; }
        /// <summary>
        /// Gets or Sets SystemName
        /// </summary>
        [DataMember(Name="systemName")]
        public string SystemName { get; set; }
        /// <summary>
        /// Gets or Sets Cwid
        /// </summary>
        [DataMember(Name="cwid")]
        public string Cwid { get; set; }
        /// <summary>
        /// Gets or Sets DtLastLogin
        /// </summary>
        [DataMember(Name="dtLastLogin")]
        public DateTime? DtLastLogin { get; set; }
        /// <summary>
        /// Gets or Sets Roles
        /// </summary>
        [DataMember(Name="roles")]
        public List<Role> Roles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoginViewModel {\n");
            sb.Append("  NameUser: ").Append(NameUser).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  SystemName: ").Append(SystemName).Append("\n");
            sb.Append("  Cwid: ").Append(Cwid).Append("\n");
            sb.Append("  DtLastLogin: ").Append(DtLastLogin).Append("\n");
            sb.Append("  Roles: ").Append(Roles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((LoginViewModel)obj);
        }

        /// <summary>
        /// Returns true if LoginViewModel instances are equal
        /// </summary>
        /// <param name="other">Instance of LoginViewModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoginViewModel other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    this.NameUser == other.NameUser ||
                    this.NameUser != null &&
                    this.NameUser.Equals(other.NameUser)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.SystemName == other.SystemName ||
                    this.SystemName != null &&
                    this.SystemName.Equals(other.SystemName)
                ) && 
                (
                    this.Cwid == other.Cwid ||
                    this.Cwid != null &&
                    this.Cwid.Equals(other.Cwid)
                ) && 
                (
                    this.DtLastLogin == other.DtLastLogin ||
                    this.DtLastLogin != null &&
                    this.DtLastLogin.Equals(other.DtLastLogin)
                ) && 
                (
                    this.Roles == other.Roles ||
                    this.Roles != null &&
                    this.Roles.SequenceEqual(other.Roles)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                    if (this.NameUser != null)
                    hash = hash * 59 + this.NameUser.GetHashCode();
                    if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                    if (this.SystemName != null)
                    hash = hash * 59 + this.SystemName.GetHashCode();
                    if (this.Cwid != null)
                    hash = hash * 59 + this.Cwid.GetHashCode();
                    if (this.DtLastLogin != null)
                    hash = hash * 59 + this.DtLastLogin.GetHashCode();
                    if (this.Roles != null)
                    hash = hash * 59 + this.Roles.GetHashCode();
                return hash;
            }
        }

        #region Operators

        public static bool operator ==(LoginViewModel left, LoginViewModel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(LoginViewModel left, LoginViewModel right)
        {
            return !Equals(left, right);
        }

        #endregion Operators

    }
}
